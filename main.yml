---
- name: Set up cluster-wide configuration.
  hosts: cluster
  gather_facts: true

  handlers:
    - name: Reboot-pi
      ansible.builtin.reboot:

    - name: Restart nfs
      ansible.builtin.service:
        name: nfs-server
        state: restarted

  vars_files:
    - config.yml

  tasks:
    - name: Ensure cgroups are configured correctly in cmdline.txt.
      ansible.builtin.replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
        - "cgroup_memory=1"
        - "cgroup_enable=memory"
      notify: reboot-pi

- name: Ensure docker on everything
  hosts: all
  gather_facts: true
  become: true
  vars_files:
    - config.yml
  tasks:
    - name: Ensure Docker installed
      ansible.builtin.include_tasks: tasks/docker/docker.yml

- name: Configure the Manager.
  hosts: manager
  gather_facts: false
  become: true
  vars_files:
    - config.yml
  tasks:
    - name: Ensure required dependencies are installed.
      ansible.builtin.package:
        name:
          - build-essential
          - git
        state: present
      become: true
    - name: Ensure Docker-swarm installed
      ansible.builtin.include_tasks: tasks/docker/swarm-manager.yml

- name: Ensure portainer-agent on nodes
  hosts: nodes
  gather_facts: false
  become: true
  vars_files:
    - config.yml
  tasks:
    - name: Ensure nodes join swarm
      ansible.builtin.include_tasks: tasks/docker/swarm-nodes.yml
    - name: Ensure portainer-agent installed
      ansible.builtin.include_tasks: tasks/portainer/agent.yml

# - name: Configure storage node.
#   hosts: storage
#   gather_facts: false
#   become: true

#   vars_files:
#     - config.yml

#   tasks:
#     - name: Set up storage
#       ansible.builtin.include_tasks: tasks/storage/{{ storage_type }}.yml
